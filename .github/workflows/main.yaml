on:
  push:
    branches: [main]
    paths-ignore:
      - '**/README.md'

  pull_request:
    branches: [main]
    paths-ignore:
      - '**/README.md'

  workflow_dispatch:

permissions:
  contents: read
  checks: write

jobs:
  # This workflow contains 4 jobs called "run-linters", "tsc", "test" & "build"
  run-linters:
    name: Run linters
    timeout-minutes: 2
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          check-latest: true
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Cache Node.js dependencies
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node.js dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          eslint: true
          prettier: true

  tsc:
    name: Typecheck
    needs: run-linters
    timeout-minutes: 2
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          check-latest: true
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Cache Node.js dependencies
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-*

      - name: Install Node.js dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Install TypeScript
        run: npm install -g typescript

      - name: Run TypeScript check
        run: tsc --noEmit

  test:
    name: Test
    needs: tsc
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          check-latest: true
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Cache Node.js dependencies
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node.js dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run Tests
        run: npm test

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    if: success()

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          check-latest: true
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Cache Node.js dependencies
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
